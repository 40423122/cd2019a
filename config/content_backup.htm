<h1>各組期末報告說明</h1>
<h4>第十七週前請完成個人期末報告影片與各項查驗資料準備</h4>
<p>參考網址:<a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a></p>
<p><span>宣告重點: 至今仍無個人課程網頁內容者、未每週持續提交工作進度者、未實際拍攝各週操作影片以及未實際根據評分項目參與各分組與全班協同者, 最後將無法順利取得修課及格之學期成績.</span></p>
<hr/>
<p><br/><span>請本學期選修協同產品設計實習與網際內容管理課程的同學特別注意, 務必在第十七週上課前, 依據各週所提交推送的操作影片、Github 倉儲提交紀錄、個人網頁、分組網頁與全班協同網頁等資料, 配合下列各課程評分比列進行具體自評.</span><br/><br/><span>第十七週與第十八週將分別請每一位同學上台進行期末簡報, 詳細說明本學期各項評分項目中的自評內容與分數.</span><br/><br/><span>每一位學員自我查驗項目:</span><br/><br/><span>1. 是否在第十七週上課前完成個人至多 5 分鐘的期末報告影片, 上傳至以學號登錄的 Youtube 帳號下, 並分別嵌入個人網站中, 且標題分別為:</span><br/><br/><span> <span> </span></span><span>  協同產品設計實習課程</span><br/><br/><span>        國立虎尾科技大學 - 機械設計工程系 - 協同產品設計實習期末報告 - 學號 - 姓名</span><br/><br/><span>   <span> </span></span><span>四技部網際內容管理課程</span><br/><br/><span>        國立虎尾科技大學 - 機械設計工程系 - 網際內容管理期末報告 - 學號 - 姓名</span><br/><br/><span>   <span> </span></span><span>五專部網際內容管理課程</span><br/><br/><span>        國立虎尾科技大學 - 精密機械工程科 - 網際內容管理期末報告 - 學號 - 姓名</span><br/><br/><span>   <span> </span></span><span>請注意:</span><span><span> </span>未按照上述規定完成期末報告影片署名與提交嵌入者, 一律不予計分.</span><br/><br/><span>2. 每一位學員上台進行期末自評簡報時, 必須舉證個人在各週實際完成的 Github 倉儲歷程資料, 說明個人在分組與全班協同過程中所扮演的角色與貢獻, 且依據課程評分比例進行自評.</span><br/><br/><span>以下為各課程的學員評分比例與評分方式:</span><br/><br/><span>協同產品設計實習課程</span><br/><br/><span>評分比例:</span><br/><br/><span>    學員出席 (20%)</span><br/><br/><span>    Github 倉儲管理  (20%)</span><br/><br/><span>    Onshape 協同操作 (20%)</span><br/><br/><span>    V-rep 模擬 (20%)</span><br/><br/><span>    程式開發 (20%)</span><br/><br/><span>評分方式:</span><br/><br/><span>    CD 每週自評與互評表單:<span> </span></span><a href="https://goo.gl/forms/qtk5fxdeGYHCeI1M2">https://goo.gl/forms/qtk5fxdeGYHCeI1M2</a><br/><br/><span>    學員自我評量 (30%)</span><br/><br/><span>    分組自我評量 (30%)</span><br/><br/><span>    倉儲歷程查驗 (40%)</span><br/><br/><span>網際內容管理課程</span><br/><br/><span>評分比例:</span><br/><br/><span>    學員出席 (20%)</span><br/><br/><span>    電腦組裝與操作系統安裝 (10%) - 以 Virtualbox 虛擬主機配置與設定取代實體安裝</span><br/><br/><span>    網路連線配置與設定  (10%)</span><br/><br/><span>    Github 倉儲與 CMSimfly 配置 (30%)</span><br/><br/><span>    CMSimfly 操作 (20%)</span><br/><br/><span>    CMSimfly 開發 (10%)</span><br/><br/><span>評分方式:</span><br/><br/><span>    WCM 每週自評與互評表單:<span> </span></span><a href="https://goo.gl/forms/gExeWw3JIrenXi453">https://goo.gl/forms/gExeWw3JIrenXi453</a><br/><br/><span>    學員自我評量 (30%)</span><br/><br/><span>    分組自我評量 (30%)</span><br/><br/><span>    倉儲歷程查驗 (40%)</span></p><h1>執行規劃</h1>
<p>W11分配各組員所負責之項目</p>
<p>W12至 W16為各組員所需完成之項目</p>
<p>W16至W17為期末專案PDF製作</p>
<p>各個組員所分配工作如下<span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span> </span></span><span></span></span><span><span color="#00000B" style="color: #00000b;">：</span></span></p>
<p>吳柔燕<span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span> </span></span><span></span></span><span><span color="#00000B" style="color: #00000b;">：設計與繪圖</span></span></p>
<p><span>潘季宏 </span><span><span color="#00000B" style="color: #00000b;">：設計與繪圖</span></span></p>
<p><span><span color="#00000B" style="color: #00000b;">趙家傑 <span><span color="#00000B" style="color: #00000b;">：設計與繪圖</span></span></span></span></p>
<p><span><span color="#00000B" style="color: #00000b;"><span>葉修宏 ：V-rep模擬與程式設計</span></span></span></p>
<p><span><span color="#00000B" style="color: #00000b;"><span>吳承哲 ：V-rep模擬與<span>程式設計</span></span></span></span></p>
<p><span><span color="#00000B" style="color: #00000b;"><span>翁俊揚 ：V-rep回球機構繪圖及模擬</span></span></span></p>
<p><span><span color="#00000B" style="color: #00000b;"><span>王映捷 <span>：V-rep回球機構繪圖及模擬</span></span></span></span></p>
<p><span><span color="#00000B" style="color: #00000b;"><span><span>李昀霖：V-rep模擬</span></span></span></span></p><h2>手足球系統模擬</h2>
<p>專案成果摘要</p>
<p>1.手足球桌檯設計與繪圖</p>
<p>2.手足球 vrep 模擬</p>
<p>3.迴球、送球機構設計&amp;模擬</p>
<p>4.Vrep 程式簡化模擬</p>
<p>5.桌檯細部設計與 BOM</p>
<p>專案執行動機</p>
<p>          相信大家小時候都玩過或看過類似的手足球機台，但是現在在我們周遭這種東西已經少之又少。為了重回小時候對手足球的熱情，我們試著把它用電腦模擬出來，並製作回球機構， 使我們的手足球機台可以比以前的更加方便。</p>
<p>專案執行成員</p>
<p><a href="https://github.com/40623102">40623102</a><span> </span>吳柔燕          <a href="https://github.com/40623124">40623124</a><span> </span>葉修宏</p>
<p><a href="https://github.com/40623110">40623110</a><span> </span>翁俊揚          <a href="https://github.com/40623132">40623132</a><span> </span>趙家傑</p>
<p><a href="https://github.com/40623111">40623111</a><span> </span>王映捷          <a href="https://github.com/40623144">40623144</a><span> </span>林昭權</p>
<p><a href="https://github.com/40623113">40623113</a><span> </span>吳承哲          <a href="https://github.com/40623152">40623152</a><span> </span>潘季宏</p>
<p><a href="https://github.com/40623121">40623121</a><span> </span>蔡朝旭          <a href="https://github.com/40623157">40623157</a><span> </span>李昀霖</p>
<p>執行使用套件</p>
<p><a href="https://www.onshape.com/">Onshape</a><span>、V-rep、<a href="https://github.com/">Github</a> 、<a href="https://www.scintilla.org/SciTEDownload.html">SciTE</a></span></p>
<p>專案執行過程規劃</p>
<p>W11分配各組員所負責之項目</p>
<p>W12至 W16為各組員所需完成之項目</p>
<p>W16至W17為期末專案PDF製作</p>
<p>專案執行內容</p>
<p>專案結論</p>
<p><span>相關文獻探討</span></p>
<p><span><a href="https://1516a046-a-62cb3a1a-s-sites.googlegroups.com/site/tornadosportstaiwan/Products/Tables/Elite/Tornado-FoosballHm.pdf?attachauth=ANoY7crgSd50vq4hyRs_55OvS8On1iqL2XEsVRohGQulSNxMc0LnQS0z-HbFGfJNHsR4k8mONaGEGJgJ2EhdcM-t8R2WMc4NUyEgVufEkoa-6J609sn1L0cK7ogEDOX0IQi-HmENUTfL_OMDMcYZ5d6q15lVpNiV9i14YCXk26CZZXPHxyDdF3OTvIit3mekHsY5-GrKSQq63rwrHvgLbzjvIVJrgK2OhgTkEZBTgzvQAP0qzjYUIgk1RkCUlFIYn2EImRuiZUZKp32uHNWHvwF8Wd3leTMb8A%3D%3D&amp;attredirects=0">台桌尺寸規格</a>、<a href="http://blog.sina.com.tw/9357/article.php?entryid=1998">球的尺寸</a> 、<a href="https://www.thingiverse.com/thing:1090">手足球人偶</a> 、<a href="http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python 程式語法</a></span></p><h1>設計與繪圖</h1>
<h2>零組件尺寸分析</h2>
<p>手足球零件尺寸參考來自: <a href="https://2019wcm.blogspot.com/search/label/foosball"> https://2019wcm.blogspot.com/search/label/foosball</a></p>
<p>手足球系統的零組件尺寸分析 (可行性分析)</p>
<p>尺寸單位 : inch(<span>吋</span>)</p>
<p>1.檯桌尺寸 (長:56   寬:30   高:5)</p>
<p><img src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/table.png"/></p>
<p>2.橫桿插入孔尺寸(直徑:0.563   距底部:2.75    孔間距:6)</p>
<p><img alt="" height="576" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/OOOOOO.png" width="1293"/></p>
<p>3.球門尺寸(寬:4.5  長:3   距底部:0.8 ) (初版)</p>
<p><img alt="" height="1050" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/5435454654.png" width="1680"/></p>
<p>球門尺寸<span style="background-color: #ff9900;">最終版</span> (為了連接送<span>球軌道與</span><span>送球機構</span>) (寬: 10)</p>
<p><img alt="" height="520" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/151.jpg" width="745"/></p>
<p>4.橫桿尺寸(長:70   直徑:0.563)</p>
<p><span style="background-color: #ff9900;">*球桿直徑與桌檯孔洞呈鬆配合<span>，考慮到是否會讓球員在移動時無法完整移動至左右，以及使用者好操作等因素，決定將原本的40in改成70in。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="710" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/-----.png" width="876"/></span></span></p>
<p>5.球員尺寸(長:1.5   寬:1   高:3   圓孔:0.563    距底部:0.9)</p>
<p></p>
<p><span style="background-color: #ff9900;">*球員孔洞需與衡感直徑呈緊配合，必須使球員能隨橫桿轉動<span>。</span></span><span style="background-color: #ff9900;"><span>本來設定球員尺寸時，為了讓球員能順利擊球而避免卡到球的問題，所以球員與底部的距離必須小於球的直徑。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="1050" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/454545635.png" width="1680"/></span></span></p>
<p><span style="background-color: #ff9900; color: #003300;"></span>6.球尺寸(直徑:0.15)</p>
<p><span style="background-color: #ff9900;">*球的直徑要大於球員距底板的距離，才不會發生卡球等問題<span>。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="580" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/O.png" width="552"/></span></span></p>
<p>7.<span>送球軌道</span></p>
<p><span style="background-color: #ff9900;">*由於尺寸需要配合送球機構以及球體尺寸的關係，軌道內側寬度設為2<span>。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="458" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/U.png" width="629"/></span></span></p>
<p><span style="background-color: #ff9900;"><span>*為了讓球能順利進入送球機構，球門至最靠近送球機構軌道的彎道改為倒角。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="687" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/L.png" width="1059"/></span></span></p>
<p><span style="background-color: #ff9900;"><span>*為了使球能不因為速度過快而彈至軌道外，而將軌道坡度減緩至10度左右。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="619" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/v.png" width="954"/></span></span></p>
<p><span style="background-color: #ff9900;"><span>*為了讓球能從最後的V字軌道順利進入場地，而把入口改為方形入口。</span></span></p>
<p><img alt="" height="716" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/LL.png" width="779"/></p>
<p><img alt="" height="590" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/LV.png" width="544"/></p>
<p><span style="background-color: #ff9900;">*為了讓球能順利的進入場中<span>，方形入口前的軌道改為L型斜坡。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="481" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/LII.png" width="552"/></span></span></p>
<p><img alt="" height="594" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/LIII.png" width="851"/></p>
<p><img alt="" height="658" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/L--.png" width="991"/></p>
<p>8.送球機構</p>
<p><span style="background-color: #ff9900;">*送球機構由圓盤和主旋轉軸組成<span>，經由圓盤上的圓孔收入圓球，再由主傳動軸旋轉帶入至上方軌道。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="772" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/AOO.png" width="1259"/></span></span></p>
<p><span style="background-color: #ff9900;"><img alt="" height="759" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/AOW.png" width="1043"/></span></p>
<p><span style="background-color: #ff9900;">*為了讓球能順利進入軌道<span>，入球孔大小與出球孔大小有差距，進而形成小斜坡。</span></span></p>
<p><span style="background-color: #ff9900;"><span><img alt="" height="608" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/O-o.png" width="1060"/></span></span></p>
<p><img alt="" height="673" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/o~O.png" width="826"/></p><h2>參數設計與繪圖</h2>
<p>手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖)</p>
<p>Onshape 零組件連結</p>
<p><a href="https://cad.onshape.com/documents/2cc966a037073bad4c2e2769/w/446907d51186d2c31c8d8b90/e/a5bc1080e53d9efa9e22a820">https://cad.onshape.com/documents/2cc966a037073bad4c2e2769/w/446907d51186d2c31c8d8b90/e/a5bc1080e53d9efa9e22a820</a></p>
<p>球檯繪圖</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/aSki1GWgBL4" width="560"></iframe></p>
<p>繪製與組裝</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NVC1umg9mR4" width="560"></iframe></p><h2>細部設計與 BOM</h2>
<p>完成手足球零組件細部設計 (可參考 <a href="https://youtu.be/PgnvZV5s13c">https://youtu.be/PgnvZV5s13c</a> 中各項設計), 並將設計 BOM (Bill of Materials) 納入 CMSimfly 網際內容管理系統. (系統 BOM 文件整理)</p>
<p>手足球 DIY 影片:</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PgnvZV5s13c" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/DLchkFqzTNA" width="560"></iframe></p>
<h4>參考資料:</h4>
<p><a href="https://www.matterhackers.com/articles/how-to-build-a-foosball-table">https://www.matterhackers.com/articles/how-to-build-a-foosball-table</a></p>
<p><a href="https://www.matterhackers.com/store/digital-designs/foosball-table-parts">https://www.matterhackers.com/store/digital-designs/foosball-table-parts</a></p>
<h4>手足球零件格式說明</h4>
<p>手足球零件格式說明</p>
<h4>零件 BOM</h4>
<p>手足球零組件材料表 (含零組件下載連結)</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/BOM-2.jpg" width="3300"/></p>
<p><a href="https://cad.onshape.com/documents/2cc966a037073bad4c2e2769/w/446907d51186d2c31c8d8b90/e/a5bc1080e53d9efa9e22a820">https://cad.onshape.com/documents/2cc966a037073bad4c2e2769/w/446907d51186d2c31c8d8b90/e/a5bc1080e53d9efa9e22a820</a></p>
<h4>零件尺寸圖</h4>
<p>零件尺寸圖</p>
<p>球桌</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/Table-2.jpg" width="3300"/></p>
<p>球員</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/Doll-2.jpg" width="3300"/></p>
<p>手桿</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/Shaft-2.jpg" width="3300"/></p>
<p>運球轉輪</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/Turntable-2.jpg" width="3300"/></p>
<p>運球機構</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/Marble%20Machine.jpg" width="3300"/></p>
<h4>零件部分組裝圖</h4>
<p>零件部分組裝圖</p>
<h4>3D 零組件爆炸圖</h4>
<p>3D 零組件爆炸圖</p>
<p><img alt="" height="2550" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/3D%E7%88%86%E7%82%B8%E5%9C%96.jpg" width="3300"/></p><h1>V-rep 動態模擬</h1>
<p>手足球系統中各球員擊球與操控桿移動旋轉的 V-rep 動態模擬 (系統功能模擬)</p>
<p>以文字及操作影片說明如何從 Onshape 設計繪製零組件後, 如何轉入 V-rep, 如何編寫程式, 如何進行各種功能測試, 最後完成手足球的 V-rep 動態模擬系統.</p>
<p>檔案位置：<a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g4/raw/gh-pages/TTT%E6%AA%94/Football.ttt">football table.ttt</a></p>
<h2>問題和討論</h2>
<p>Q：遇到球無法滾出球門？</p>
<p>A：有可能是因為你簡化的過程，簡化的模型太高，而導致球會卡在球門，所以遇到類似情形把簡化的模型刪掉即可</p>
<p><img alt="" height="643" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/%E7%B0%A1%E5%8C%96%E5%A4%AA%E9%AB%98.png" width="1315"/></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Wg7aTU3srVE" width="560"></iframe></span></p>
<p><span>Q：</span>球進門後卡在球門下？</p>
<p><span>A：</span>繪製草圖時因不小心讓那裏成為平台，而導致球無法向下滾動，所以我們把那個地方改成斜面即可！</p>
<p><img alt="" height="677" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/%E7%90%83%E5%8D%A1%E5%9C%A8%E7%90%83%E9%96%80%E4%B8%8B.png" width="972"/></p>
<p><span>Q：</span>球順著軌道滾動後卡在回球機構的門口？</p>
<p><span>A：</span>把送球機構的孔洞放大，讓球得以順利通過返回球桌！</p>
<p><img alt="" height="552" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/%E7%90%83%E5%8D%A1%E4%BD%8F.png" width="942"/></p>
<p>Q：如何讓桿子偵測到球體的位置並進行移動和反擊?</p>
<p>A：先利用指令得知球體的<span>Y</span>方向座標，再進行相減得到值即可確認球體在桿子的右邊還是左邊，並使桿子確實反擊</p>
<p>Q：要如何得知球體目前的位置?</p>
<p>A：使用指令<code class="py plain">number returnCode,number parentObjectHandle</code><code class="py keyword">=</code><code class="py plain">vrep.simxGetObjectParent(number clientID,number objectHandle,number operationMode)即可得知目前球體的座標位置</code></p><h2>簡化模擬</h2>
<p>首先在<span> onshape </span>將想要使用的零件圖或組合圖按照如下圖</p>
<p><img alt="" height="547" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/123456.png" width="973"/></p>
<p>匯出成<span>.stl </span>檔，再至<span>v-rep </span>中開啟<span>.stl </span>檔<span> </span>使用<span> [File</span>–<span>&gt;Import</span>–<span>&gt;Mash</span>…<span>]</span>，如下圖</p>
<p><img alt="" height="517" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/22222.jpg" width="400"/></p>
<p>依據個人所需去做點選，在按<span> OK </span>即可在視窗中導入模型。可以從下圖中看出</p>
<p><img alt="" height="381" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/33333.jpg" width="865"/></p>
<p>導入的模型是未分離的模型<span> (</span>如若是零件圖則不須此步驟<span>)</span>，</p>
<p>所以我們使用  [Edit–<span>&gt;Grouping/Merging</span>–<span>&gt;Divideselectedshapes]  </span>來將模型中的物件全都爆開，如下圖</p>
<p><img alt="" height="435" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/4.jpg" width="865"/></p>
<p>接下來說明桌檯簡化步驟</p>
<p><span>1 .<span>使用</span><span>[File</span><span>–</span><span>&gt;Newscene] 建立新的檔案<span color="#00000B" style="color: #00000b;">，</span><span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span> </span></span></span>然後</span></span>使用 <span>[Edit&gt;CopyselectedObjects] </span>到一個新建的場景<span>。</span></p>
<p>2 . 將人物貼上<span> </span>使用 <span> [Edit </span>–<span>&gt; Paste buffer]</span>。</p>
<p>3 . 點選頁面選擇器工具欄按鈕 ，如圖<img alt="" height="172" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/5.jpg" width="217"/><span>，使得在簡化的過程中更容易點選</span></p>
<p>4.<span>4 . 選取桌檯再點選形狀編輯模式工具欄按鈕來進行簡化如</span><img alt="" height="133" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/6.jpg" width="158"/>再點選簡化 的對話框 <span>Operations on selected triangles </span>中的<span> Extract cuboid </span>如下圖</p>
<p><img alt="" height="689" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/7.jpg" width="753"/></p>
<p></p>
<p>5 . 之後會出現<span> Primitive cuboid </span>的對話框並按下<span> OK </span>即會產生一個立方體如下圖</p>
<p><img alt="" height="608" src="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g4/images/8.jpg" width="865"/></p>
<p>桌檯的簡化 就完成了<span><span color="#00000B" style="color: #00000b;">！</span></span><span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span> </span></span></span></p>
<p>簡化示範影片<span><span color="#00000B" style="color: #00000b;">：</span></span><span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span> </span></span></span></p>
<p><span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nlnmwvENZlE" width="560"></iframe></span></span></span></p>
<p><span color="#FF00FF" style="color: #ff00ff;"><span lang="EN-US"><span><a href='/get_page/%E7%B0%A1%E5%8C%96%E6%A8%A1%E6%93%AC/&lt;iframe width="560" height="315" src="https:/www.youtube.com/embed/nlnmwvENZlE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;'></a></span></span></span></p><h2>送球機構設計與模擬</h2>
<p>手足球發球與進球後自動送球機構設計與 V-rep 動態模擬 (機構與傳動系統設計與模擬)</p>
<p>可採用螺旋機構或多連桿機構設計, 透過進球感測器感應後, 將儲存於螺桿上的球送回球檯.</p>
<p>以下為參考機構模擬影片:</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IjoSLafsA2w" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ZAGrFV1jCdk" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/UQPJ7l3QPd0" width="560"></iframe></p>
<p>簡化模擬</p><h2>設計與模擬影片</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7sOUTRGeuvc" width="560"></iframe></p>
<p>Vrep基本設定</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/h5_TWTqznC0" width="560"></iframe></p>
<p>設計(二)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/O3kcxMwShjc" width="560"></iframe></p>
<p>手足球迴球機構Vrep模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2yTUUQN4M8g" width="560"></iframe></p>
<p>V-rep送球模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Rbcy_draWrQ" width="560"></iframe></p>
<h2>系統功能展示</h2>
<h4>程式參考來自第3組網站與詢問第一.三組</h4>
<h3>手足球雙人鍵盤對打</h3>
<p>檔案:<a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g4/blob/gh-pages/TTT%E6%AA%94/new%20football.ttt">new football</a></p>
<p>V-REP模擬結果<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_rg5RIhGJVw" width="560"></iframe></p>
<p>PYTHON程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import keyboard
from time import sleep
import sys, math
vrep.simxFinish(-1) 
clientID = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)  
KickBoV = 90   
n=1
L_KickBoV = (math.pi/180)*KickBoV
R_KickBoV = -(math.pi/180)*KickBoV
if clientID!= -1:  
    print('connect successfully')
else:
    print('connect failed')
    vrep.simxFinish(clientID)
print('program ended')



  
errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)
errorCode,Pole_handle=vrep.simxGetObjectHandle(clientID,'Pole',vrep.simx_opmode_oneshot_wait)
errorCode,Revolute_handle=vrep.simxGetObjectHandle(clientID,'Revolute',vrep.simx_opmode_oneshot_wait)
errorCode,Prismatic_handle=vrep.simxGetObjectHandle(clientID,'Prismatic',vrep.simx_opmode_oneshot_wait)
errorCode,Revolute2_handle=vrep.simxGetObjectHandle(clientID,'Revolute2',vrep.simx_opmode_oneshot_wait)
errorCode,Prismatic2_handle=vrep.simxGetObjectHandle(clientID,'Prismatic2',vrep.simx_opmode_oneshot_wait)
errorCode,Pole2_handle=vrep.simxGetObjectHandle(clientID,'Pole2',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
     

     
def start():
    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)
    while True:
        try:
            if keyboard.is_pressed('r'):
                vrep.simxSetJointTargetVelocity(clientID,Revolute_handle,R_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('t'):
                vrep.simxSetJointTargetVelocity(clientID,Revolute_handle,L_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('q'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0.05,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('w'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('e'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,-0.05,vrep.simx_opmode_oneshot_wait)
             
            elif keyboard.is_pressed('.'): 
                vrep.simxSetJointTargetVelocity(clientID,Revolute2_handle,L_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('/'):  
                vrep.simxSetJointTargetVelocity(clientID,Revolute2_handle,R_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('b'):  
                vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,0.05,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('n'):  
                vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,0,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('m'):  
                vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,-0.05,vrep.simx_opmode_oneshot_wait)
            else:
                pass
        except:
            break
        
start()
</pre>
<p></p><h3>手足球手控與電腦對打</h3>
<p><span>檔案:</span><a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g4/blob/gh-pages/TTT%E6%AA%94/new%20football.ttt">new football</a></p>
<p>V-REP模擬結果</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/UYMr74eoU1I" width="560"></iframe></p>
<p>PYTHON程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import keyboard
import  time 
import sys, math
vrep.simxFinish(-1) 
clientID = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)  
KickBoV = 360
L_KickBoV = (math.pi/180)*KickBoV
R_KickBoV = -(math.pi/180)*KickBoV
if clientID!= -1:  
    print('connect successfully')
else:
    print('connect failed')
    vrep.simxFinish(clientID)
print('program ended')
    
    
    
    
err,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)
err,Pole_handle=vrep.simxGetObjectHandle(clientID,'Pole',vrep.simx_opmode_oneshot_wait)
err,Revolute_handle=vrep.simxGetObjectHandle(clientID,'Revolute',vrep.simx_opmode_oneshot_wait)
err,Prismatic_handle=vrep.simxGetObjectHandle(clientID,'Prismatic',vrep.simx_opmode_oneshot_wait)
err,Revolute2_handle=vrep.simxGetObjectHandle(clientID,'Revolute2',vrep.simx_opmode_oneshot_wait)
err,Prismatic2_handle=vrep.simxGetObjectHandle(clientID,'Prismatic2',vrep.simx_opmode_oneshot_wait)
err,Pole2_handle=vrep.simxGetObjectHandle(clientID,'Pole2',vrep.simx_opmode_oneshot_wait)
 


if err == -1:
    print('Can not find left or right motor')
    sys.exit()
    
    
    
def speed(handle,speed):
    err = vrep.simxSetJointTargetVelocity(clientID,handle,speed,vrep.simx_opmode_oneshot_wait)
def start():
    err=vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)
    while True:
        err,position_LR=vrep.simxGetObjectPosition(clientID,Revolute2_handle,-1,vrep.simx_opmode_oneshot)
        err,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)
        err,position_RR=vrep.simxGetObjectPosition(clientID,Revolute_handle,-1,vrep.simx_opmode_oneshot)
        LP =position_S[1] -position_LR[1] 
        LPP =position_S[0] - position_LR[0]
        print(position_S)
        if LPP &gt;-0.015:
            speed(Revolute2_handle,L_KickBoV)
        elif LPP &lt;= -0.015:
            speed(Revolute2_handle,R_KickBoV)
        else:
            pass
        try:
            if keyboard.is_pressed('r'):
                vrep.simxSetJointTargetVelocity(clientID,Revolute_handle,R_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('t'):
                vrep.simxSetJointTargetVelocity(clientID,Revolute_handle,L_KickBoV,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('q'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0.1,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('w'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0,vrep.simx_opmode_oneshot_wait)
            elif keyboard.is_pressed('e'):
                vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,-0.1,vrep.simx_opmode_oneshot_wait)
            else:
                pass
        except:
            break
        Pv = LP*2.5
        vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,Pv,vrep.simx_opmode_oneshot_wait)
      
        
vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0,vrep.simx_opmode_oneshot_wait)       
vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,0,vrep.simx_opmode_oneshot_wait)

        
        

start()
</pre>
<p></p><h3>手足球電腦與電與對打</h3>
<p><span>檔案:</span><a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g4/blob/gh-pages/TTT%E6%AA%94/new%20football.ttt">new football</a></p>
<p>V-REP程式模擬結果</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/s92nquB7-m8" width="560"></iframe></p>
<p>PYTHON程式碼</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import keyboard
import  time 
import sys, math
vrep.simxFinish(-1) 
clientID = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)  
KickBoV = 360
L_KickBoV = (math.pi/180)*KickBoV
R_KickBoV = -(math.pi/180)*KickBoV
if clientID!= -1:  
    print('connect successfully')
else:
    print('connect failed')
    vrep.simxFinish(clientID)
print('program ended')
    
    
    
    

err,Sphere_handle=vrep.simxGetObjectHandle(clientID,'Sphere',vrep.simx_opmode_oneshot_wait)
err,Pole_handle=vrep.simxGetObjectHandle(clientID,'Pole',vrep.simx_opmode_oneshot_wait)
err,Revolute_handle=vrep.simxGetObjectHandle(clientID,'Revolute',vrep.simx_opmode_oneshot_wait)
err,Prismatic_handle=vrep.simxGetObjectHandle(clientID,'Prismatic',vrep.simx_opmode_oneshot_wait)
err,Revolute2_handle=vrep.simxGetObjectHandle(clientID,'Revolute2',vrep.simx_opmode_oneshot_wait)
err,Prismatic2_handle=vrep.simxGetObjectHandle(clientID,'Prismatic2',vrep.simx_opmode_oneshot_wait)
err,Pole2_handle=vrep.simxGetObjectHandle(clientID,'Pole2',vrep.simx_opmode_oneshot_wait)
 

if err == -1:
    print('Can not find left or right motor')
    sys.exit()
    
    
    
def speed(handle,speed):
    err = vrep.simxSetJointTargetVelocity(clientID,handle,speed,vrep.simx_opmode_oneshot_wait)
def start():
    err=vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)
    while True:
        err,position_LR=vrep.simxGetObjectPosition(clientID,Revolute2_handle,-1,vrep.simx_opmode_oneshot)
        err,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)
        err,position_RR=vrep.simxGetObjectPosition(clientID,Revolute_handle,-1,vrep.simx_opmode_oneshot)
        LP =position_S[1] - position_LR[1] 
        LPP =position_S[0] - position_LR[0]
        RP =position_S[1] - position_RR[1] 
        RPP =position_S[0] - position_RR[0]
        print(position_S)
        if LPP &lt;-0.015:
            speed(Revolute2_handle,R_KickBoV)
        elif LPP &gt;= -0.015:
            speed(Revolute2_handle,L_KickBoV)
        else:
            pass
        if RPP &gt;0.015:
            speed(Revolute_handle, L_KickBoV)
        elif RPP &lt;= 0.015:
            speed(Revolute_handle,R_KickBoV)
        else:
            pass
        Pv = LP*3
        PPV=RP*3
        vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,Pv,vrep.simx_opmode_oneshot_wait)
        vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,Pv,vrep.simx_opmode_oneshot_wait)
vrep.simxSetJointTargetVelocity(clientID,Prismatic_handle,0,vrep.simx_opmode_oneshot_wait)       
vrep.simxSetJointTargetVelocity(clientID,Prismatic2_handle,0,vrep.simx_opmode_oneshot_wait)
        

start()</pre>
<p></p><h3>模擬問題與討論</h3>
<p>在模擬上遇到的幾個問題</p>
<p><span style="color: #000080;">1.開始模擬時桿子會自行移動</span></p>
<p><span style="color: #000080;"><img alt="" height="53" src="https://i.imgur.com/oySng9j.png" width="639"/></span></p>
<p>給他初始速度為0即可靜止</p>
<p><span style="color: #000080;">2.程式GO的時候 def SPEED發生錯誤</span></p>
<p><span style="color: #000080;"><img alt="" height="36" src="https://i.imgur.com/BsupclX.png" width="653"/></span></p>
<p>給他定義值即可解錯</p>
<p><span style="color: #000080;">3.開始模擬時桿子追蹤球的Y軸位置與球的Y軸路徑相反</span></p>
<p><span style="color: #000080;"><img alt="" height="505" src="https://i.imgur.com/wcZBNEa.png" width="725"/><br/></span></p>
<p>注意下放給定移動值的數值是否有負號，有的畫刪除即可，或是更改上方的正負關系即可</p>
<p><span style="color: #000080;">4.無法擊球</span></p>
<p><span style="color: #000080;"><img alt="" height="214" src="https://i.imgur.com/NkN6Vwr.png" width="331"/></span></p>
<p>若無法擊球可嘗試在距離潛在負號或是更改大小於關係即可</p>
<p>5.注意程式裡與V-REP的軸名稱要相同</p><h1>總結報告</h1>
<h2>專案口頭簡報</h2>
<p>各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報)</p>
<h2>專案報告書</h2>
<p>各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告</p>
<p></p>
<p><a href="/downloads/ag4手足球專案結案報告.pdf">ag4手足球專案報告-1</a></p>
<p><a href="/downloads/ag4手足球專案結案報告-2.pdf">ag4手足球專案報告-2</a></p>
<p><a href="/downloads/ag4手足球專案結案報告-3.pdf">ag4手足球專案報告-3</a></p>
<p></p><h3>如何編輯報告書</h3>
<p><span style="background-color: #ffcc00;">可參考</span>:<a href="https://mdecp2018.github.io/finalproject-bgx/content/Kmol-editor.html">https://mdecp2018.github.io/finalproject-bgx/content/Kmol-editor.html</a></p>
<p>首先下載:<a href="https://drive.google.com/open?id=1lH3J-EETOpNruAz86Mi8A4PcKkgJOsh2">miktex_portable_and_pandoc.7z</a></p>
<p>下載完成後解壓縮至隨身系統中(y槽中)</p>
<p>完成後會多出<span style="background-color: #ffcc00;">兩個資料夾</span></p>
<p>分別是 pandoc-2.4-windows-x86_64 和 miktex_portable</p>
<p>接著用SciTE 開啟start.bat</p>
<p>並在path=的最後方新增</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_290651">
<table border="0" cellpadding="0" cellspacing="0" style="width: 531.6px;">
<tbody>
<tr style="height: 64px;">
<td class="gutter" style="width: 24px; height: 64px;">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code" style="width: 504.6px; height: 64px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">%Disk%:\pandoc-2.4-windows-x86_64;%Disk%:\miktex_portable\texmfs\install\miktex\bin;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>接著在<span style="background-color: #ffcc00;">cmd(小黑窗)</span>中輸入</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_910060">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">python -m pip install pandoc-fignos pandoc-tablenos pandoc-eqnos</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>等他安裝完成</p>
<p>完成後重新啟動可攜系統即可</p>
<h4><strong></strong></h4>
